buildscript {
    ext {
        encoding = 'UTF-8'
        compatibility = 11
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'signing'
    id 'maven-publish'
    id 'antlr'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'io.luchta'
version = '1.5.1-M'

sourceCompatibility = compatibility
targetCompatibility = compatibility

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'src-gen/main/java']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

dependencies {
    implementation group: 'org.apache.poi', name: 'poi', version: '4.1.2'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'

    implementation "jakarta.xml.bind:jakarta.xml.bind-api:4.0.2"
    implementation "com.sun.xml.bind:jaxb-impl:4.0.5"
    
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.0'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.17.0'

    antlr "org.antlr:antlr4:4.13.1"

    testImplementation(platform('org.junit:junit-bom:5.10.2'))
    testImplementation('org.junit.jupiter:junit-jupiter')
}

test {
    useJUnitPlatform()
}

repositories {
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            artifactId = 'forma4j'
            artifacts = [ shadowJar, javadocJar, sourcesJar ]
            pom {
                name = 'forma4j'
                description = 'Excelの読み書きを行うライブラリ'
                url = 'https://github.com/actier-luchta/forma4j'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'Actier,inc'
                    }
                }
                scm {
                    connection = 'git@github.com:actier-luchta/forma4j.git'
                    developerConnection = 'git@github.com:actier-luchta/forma4j.git'
                    url = 'https://github.com/actier-luchta/forma4j'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "s3://mars-repository-hosting/release/"
            def snapshotsRepoUrl = "s3://mars-repository-hosting/snapshot/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials(AwsCredentials) {
                accessKey "${FORMA4J_AWS_ACCESS_KEY_ID}"
                secretKey "${FORMA4J_AWS_SECRET_ACCESS_KEY}"
            }
        }
    }
}

signing {
    sign publishing.publications.shadow
}

shadowJar {
    archiveClassifier.set("")
}

generateGrammarSource {
    outputDirectory = file("src-gen/main/java")
}

tasks.named("sourcesJar").configure {
    dependsOn(":generateGrammarSource")
}
